{"stats":{"totalMutantsCount":1,"killedCount":1,"notCoveredCount":0,"escapedCount":0,"errorCount":0,"skippedCount":0,"timeOutCount":0,"msi":100,"mutationCodeCoverage":100,"coveredCodeMsi":100},"escaped":[],"timeouted":[],"killed":[{"mutator":{"mutatorName":"ArrayItemRemoval","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace ReactInspector\\MemoryUsage;\n\nuse ReactInspector\\CollectorInterface;\nuse ReactInspector\\Config;\nuse ReactInspector\\Measurement;\nuse ReactInspector\\Measurements;\nuse ReactInspector\\Metric;\nuse ReactInspector\\Tag;\nuse ReactInspector\\Tags;\nuse Rx\\Observable;\nuse function ApiClients\\Tools\\Rx\\observableFromArray;\nuse function memory_get_peak_usage;\nuse function memory_get_usage;\nuse const WyriHaximus\\Constants\\Boolean\\FALSE_;\nuse const WyriHaximus\\Constants\\Boolean\\TRUE_;\nfinal class MemoryUsageCollector implements CollectorInterface\n{\n    public function collect() : Observable\n    {\n        return observableFromArray([Metric::create(new Config('reactphp_memory', 'gauge', ''), new Tags(), new Measurements(new Measurement(memory_get_usage(TRUE_), new Tags(new Tag('perspective', 'external'), new Tag('peak', 'false'))), new Measurement(memory_get_peak_usage(TRUE_), new Tags(new Tag('perspective', 'external'), new Tag('peak', 'true'))), new Measurement(memory_get_usage(FALSE_), new Tags(new Tag('perspective', 'internal'), new Tag('peak', 'false'))), new Measurement(memory_get_peak_usage(FALSE_), new Tags(new Tag('perspective', 'internal'), new Tag('peak', 'true')))))]);\n    }\n    public function cancel() : void\n    {\n        \/\/ void\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace ReactInspector\\MemoryUsage;\n\nuse ReactInspector\\CollectorInterface;\nuse ReactInspector\\Config;\nuse ReactInspector\\Measurement;\nuse ReactInspector\\Measurements;\nuse ReactInspector\\Metric;\nuse ReactInspector\\Tag;\nuse ReactInspector\\Tags;\nuse Rx\\Observable;\nuse function ApiClients\\Tools\\Rx\\observableFromArray;\nuse function memory_get_peak_usage;\nuse function memory_get_usage;\nuse const WyriHaximus\\Constants\\Boolean\\FALSE_;\nuse const WyriHaximus\\Constants\\Boolean\\TRUE_;\nfinal class MemoryUsageCollector implements CollectorInterface\n{\n    public function collect() : Observable\n    {\n        return observableFromArray([]);\n    }\n    public function cancel() : void\n    {\n        \/\/ void\n    }\n}","originalFilePath":"\/home\/wyrihaximus\/Projects\/ReactPHPInspector\/memory-usage\/src\/MemoryUsageCollector.php","originalStartLine":27},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function collect() : Observable\n     {\n-        return observableFromArray([Metric::create(new Config('reactphp_memory', 'gauge', ''), new Tags(), new Measurements(new Measurement(memory_get_usage(TRUE_), new Tags(new Tag('perspective', 'external'), new Tag('peak', 'false'))), new Measurement(memory_get_peak_usage(TRUE_), new Tags(new Tag('perspective', 'external'), new Tag('peak', 'true'))), new Measurement(memory_get_usage(FALSE_), new Tags(new Tag('perspective', 'internal'), new Tag('peak', 'false'))), new Measurement(memory_get_peak_usage(FALSE_), new Tags(new Tag('perspective', 'internal'), new Tag('peak', 'true')))))]);\n+        return observableFromArray([]);\n     }\n     public function cancel() : void\n     {","processOutput":"PHPUnit 9.5.10 by Sebastian Bergmann and contributors.\n\nWarning:       Your XML configuration validates against a deprecated schema.\nSuggestion:    Migrate your XML configuration using \"--migrate-configuration\"!\n\nF                                                                   1 \/ 1 (100%)\n\nTime: 00:00.015, Memory: 12.00 MB\n\nThere was 1 failure:\n\n1) ReactInspector\\Tests\\MemoryUsage\\MemoryUsageCollectorTest::testCollectMemoryUsage\nFailed asserting that actual size 0 matches expected size 1.\n\n\/home\/wyrihaximus\/Projects\/ReactPHPInspector\/memory-usage\/tests\/MemoryUsageCollectorTest.php:26\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."}],"errored":[],"uncovered":[]}